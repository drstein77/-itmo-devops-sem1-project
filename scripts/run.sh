#!/bin/bash

set -e

echo "=== Запуск приложения ==="

# Загрузка переменных окружения из .env файла, если он существует
if [ -f $(dirname "$0")/../.env ]; then
    export $(grep -v '^#' $(dirname "$0")/../.env | xargs)
    echo "Переменные окружения загружены из .env файла."
else
    echo "Warning: .env файл не найден. Приложение будет запущено без него."
fi

# Компиляция приложения
echo "Компиляция Go-приложения..."
go build -o ../cmd/priceanalyzer/app ../cmd/priceanalyzer/

# Запуск приложения в фоновом режиме
echo "Запуск приложения..."
../cmd/priceanalyzer/app &

# Сохранение PID приложения, чтобы можно было его завершить позже
APP_PID=$!

# Ожидание, пока приложение не станет доступным
echo "Ожидание запуска приложения на порту 8080..."
for i in {1..30}; do
    if curl -s http://localhost:8080/health > /dev/null; then
        echo "Приложение запущено и доступно."
        break
    else
        echo "Ожидание..."
        sleep 1
    fi

    if [ $i -eq 30 ]; then
        echo "Ошибка: Приложение не запустилось в течение 30 секунд."
        kill $APP_PID
        exit 1
    fi
done

# Сохранение PID в файл для использования в других шагах, если необходимо
echo $APP_PID > app.pid

# Ожидание завершения скрипта (приложение продолжит работать в фоне)
# Это необходимо, чтобы GitHub Actions не завершил шаг, пока приложение работает
wait $APP_PID